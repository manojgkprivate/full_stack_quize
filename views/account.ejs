<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Account Settings - GameZone</title>
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css">
    <style>
        /* CSS Variables for consistent theming */
        :root {
            --primary: #6c5ce7;
            --primary-dark: #5649c0;
            --secondary: #fd79a8;
            --accent: #00cec9;
            --dark: #2d3436;
            --light: #f7f7f7;
            --gray: #636e72;
            --success: #00b894;
            --warning: #fdcb6e;
            --danger: #e17055;
            --shadow: 0 10px 30px rgba(0, 0, 0, 0.1);
            --transition: all 0.3s ease;
            --border-radius: 12px;
            --gradient: linear-gradient(135deg, var(--primary), var(--accent));
        }

        /* Base Styles */
        * {
            margin: 0;
            padding: 0;
            box-sizing: border-box;
            font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
        }

        body {
            background: linear-gradient(135deg, #1a1a2e 0%, #16213e 50%, #0f3460 100%);
            color: var(--light);
            min-height: 100vh;
            overflow-x: hidden;
            position: relative;
        }

        /* Animated Background Elements */
        .bg-animation {
            position: fixed;
            top: 0;
            left: 0;
            width: 100%;
            height: 100%;
            z-index: -1;
            overflow: hidden;
        }

        .bg-circle {
            position: absolute;
            border-radius: 50%;
            background: rgba(108, 92, 231, 0.1);
            animation: float 15s infinite ease-in-out;
        }

        .bg-circle:nth-child(1) {
            width: 300px;
            height: 300px;
            top: 10%;
            left: 5%;
            animation-delay: 0s;
        }

        .bg-circle:nth-child(2) {
            width: 200px;
            height: 200px;
            top: 60%;
            left: 80%;
            animation-delay: 2s;
        }

        .bg-circle:nth-child(3) {
            width: 150px;
            height: 150px;
            top: 30%;
            left: 70%;
            animation-delay: 4s;
        }

        .bg-circle:nth-child(4) {
            width: 250px;
            height: 250px;
            top: 70%;
            left: 10%;
            animation-delay: 6s;
        }

        @keyframes float {
            0%, 100% {
                transform: translateY(0) scale(1);
                opacity: 0.7;
            }
            50% {
                transform: translateY(-20px) scale(1.05);
                opacity: 0.9;
            }
        }

        /* Navigation Styles */
        .menu-bar {
            display: flex;
            justify-content: space-between;
            align-items: center;
            padding: 1.5rem 5%;
            background: rgba(45, 52, 54, 0.8);
            backdrop-filter: blur(10px);
            box-shadow: var(--shadow);
            position: sticky;
            top: 0;
            z-index: 100;
            border-bottom: 1px solid rgba(255, 255, 255, 0.1);
        }

        .logo {
            font-size: 2rem;
            font-weight: 800;
            background: var(--gradient);
            -webkit-background-clip: text;
            background-clip: text;
            color: transparent;
            position: relative;
            padding: 0.5rem 1rem;
            border-radius: var(--border-radius);
            overflow: hidden;
            transition: var(--transition);
        }

        .logo::before {
            content: '';
            position: absolute;
            top: 0;
            left: -100%;
            width: 100%;
            height: 100%;
            background: linear-gradient(90deg, transparent, rgba(255, 255, 255, 0.2), transparent);
            transition: var(--transition);
        }

        .logo:hover::before {
            left: 100%;
        }

        .logo:hover {
            transform: translateY(-2px);
            box-shadow: 0 5px 15px rgba(108, 92, 231, 0.4);
        }

        .menu-items {
            display: flex;
            align-items: center;
            gap: 1.5rem;
        }

        .menu-item, .btn {
            padding: 0.8rem 1.5rem;
            border-radius: var(--border-radius);
            text-decoration: none;
            font-weight: 600;
            transition: var(--transition);
            position: relative;
            overflow: hidden;
            display: flex;
            align-items: center;
            gap: 0.5rem;
        }

        .menu-item {
            color: var(--light);
            background: transparent;
            border: 1px solid transparent;
        }

        .menu-item:hover {
            color: var(--accent);
            transform: translateY(-3px);
        }

        .menu-item.active {
            color: var(--accent);
            border-color: var(--accent);
            box-shadow: 0 0 15px rgba(0, 206, 201, 0.3);
        }

        .menu-item.logout {
            color: var(--danger);
        }

        .menu-item.logout:hover {
            background: rgba(225, 112, 85, 0.1);
        }

        /* Main Content Styles */
        .container {
            max-width: 1200px;
            margin: 0 auto;
            padding: 4rem 2rem;
            position: relative;
            z-index: 1;
        }

        h1 {
            font-size: 3rem;
            margin-bottom: 2rem;
            text-align: center;
            background: linear-gradient(to right, var(--primary), var(--accent), var(--secondary));
            -webkit-background-clip: text;
            background-clip: text;
            color: transparent;
            animation: textGlow 3s ease-in-out infinite alternate;
            position: relative;
        }

        @keyframes textGlow {
            0% {
                text-shadow: 0 0 10px rgba(108, 92, 231, 0.5);
            }
            100% {
                text-shadow: 0 0 20px rgba(0, 206, 201, 0.7), 0 0 30px rgba(108, 92, 231, 0.5);
            }
        }

        h1::after {
            content: '';
            position: absolute;
            bottom: -10px;
            left: 50%;
            transform: translateX(-50%);
            width: 100px;
            height: 4px;
            background: var(--gradient);
            border-radius: 2px;
        }

        h2 {
            font-size: 1.8rem;
            margin-bottom: 1.5rem;
            color: var(--accent);
            position: relative;
            display: inline-block;
        }

        h2::after {
            content: '';
            position: absolute;
            bottom: -5px;
            left: 0;
            width: 50px;
            height: 3px;
            background: var(--gradient);
            border-radius: 2px;
        }

        h3 {
            font-size: 1.5rem;
            margin: 2rem 0 1rem;
            color: var(--secondary);
        }

        .account-content {
            display: grid;
            grid-template-columns: 1fr 1fr;
            gap: 2rem;
        }

        @media (max-width: 768px) {
            .account-content {
                grid-template-columns: 1fr;
            }
        }

        .user-info, .stats-card {
            background: rgba(255, 255, 255, 0.05);
            backdrop-filter: blur(10px);
            border-radius: var(--border-radius);
            padding: 2rem;
            box-shadow: var(--shadow);
            border: 1px solid rgba(255, 255, 255, 0.1);
            transition: var(--transition);
            position: relative;
            overflow: hidden;
        }

        .user-info:hover, .stats-card:hover {
            transform: translateY(-5px);
            box-shadow: 0 15px 30px rgba(0, 0, 0, 0.2);
        }

        .user-info::before, .stats-card::before {
            content: '';
            position: absolute;
            top: 0;
            left: 0;
            width: 100%;
            height: 5px;
            background: var(--gradient);
        }

        .user-info p {
            font-size: 1.1rem;
            margin-bottom: 1rem;
            padding: 0.8rem;
            background: rgba(255, 255, 255, 0.05);
            border-radius: var(--border-radius);
            transition: var(--transition);
        }

        .user-info p:hover {
            background: rgba(255, 255, 255, 0.1);
            transform: translateX(5px);
        }

        .high-score {
            background: rgba(0, 184, 148, 0.2) !important;
            border-left: 4px solid var(--success);
            animation: pulse 2s infinite;
        }

        @keyframes pulse {
            0% {
                box-shadow: 0 0 0 0 rgba(0, 184, 148, 0.4);
            }
            70% {
                box-shadow: 0 0 0 10px rgba(0, 184, 148, 0);
            }
            100% {
                box-shadow: 0 0 0 0 rgba(0, 184, 148, 0);
            }
        }

        /* Game History Styles */
        .scores-list {
            max-height: 400px;
            overflow-y: auto;
            padding-right: 10px;
        }

        .scores-list::-webkit-scrollbar {
            width: 8px;
        }

        .scores-list::-webkit-scrollbar-track {
            background: rgba(255, 255, 255, 0.05);
            border-radius: 10px;
        }

        .scores-list::-webkit-scrollbar-thumb {
            background: var(--primary);
            border-radius: 10px;
        }

        .score-item {
            background: rgba(255, 255, 255, 0.05);
            border-radius: var(--border-radius);
            padding: 1.2rem;
            margin-bottom: 1rem;
            transition: var(--transition);
            border-left: 4px solid transparent;
            animation: fadeIn 0.5s ease-out;
        }

        .score-item:nth-child(odd) {
            border-left-color: var(--primary);
        }

        .score-item:nth-child(even) {
            border-left-color: var(--accent);
        }

        @keyframes fadeIn {
            from {
                opacity: 0;
                transform: translateY(10px);
            }
            to {
                opacity: 1;
                transform: translateY(0);
            }
        }

        .score-item:hover {
            background: rgba(255, 255, 255, 0.1);
            transform: translateX(5px);
        }

        .score-item p {
            margin: 0;
            font-size: 0.95rem;
            line-height: 1.5;
        }

        .score-item strong {
            color: var(--accent);
        }

        .score-item small {
            color: rgba(255, 255, 255, 0.6);
            font-size: 0.85rem;
        }

        /* Stats Card Styles */
        .stats-grid {
            display: grid;
            grid-template-columns: repeat(2, 1fr);
            gap: 1rem;
            margin-top: 1.5rem;
        }

        .stat-item {
            background: rgba(255, 255, 255, 0.05);
            border-radius: var(--border-radius);
            padding: 1.2rem;
            text-align: center;
            transition: var(--transition);
        }

        .stat-item:hover {
            background: rgba(255, 255, 255, 0.1);
            transform: translateY(-5px);
        }

        .stat-value {
            font-size: 2rem;
            font-weight: 700;
            color: var(--accent);
            margin-bottom: 0.5rem;
        }

        .stat-label {
            font-size: 0.9rem;
            color: rgba(255, 255, 255, 0.7);
        }

        /* Achievement Styles */
        .achievements {
            margin-top: 2rem;
        }

        .achievement-list {
            display: flex;
            flex-wrap: wrap;
            gap: 1rem;
            margin-top: 1rem;
        }

        .achievement-item {
            background: rgba(255, 255, 255, 0.05);
            border-radius: var(--border-radius);
            padding: 1rem;
            display: flex;
            align-items: center;
            gap: 1rem;
            flex: 1 1 calc(50% - 1rem);
            min-width: 200px;
            transition: var(--transition);
        }

        .achievement-item:hover {
            background: rgba(255, 255, 255, 0.1);
            transform: translateY(-3px);
        }

        .achievement-icon {
            width: 50px;
            height: 50px;
            background: var(--gradient);
            border-radius: 50%;
            display: flex;
            align-items: center;
            justify-content: center;
            font-size: 1.5rem;
            color: white;
        }

        .achievement-info h4 {
            margin-bottom: 0.3rem;
            color: var(--light);
        }

        .achievement-info p {
            font-size: 0.85rem;
            color: rgba(255, 255, 255, 0.7);
            margin: 0;
        }

        /* Particle Animation */
        .particles {
            position: fixed;
            top: 0;
            left: 0;
            width: 100%;
            height: 100%;
            z-index: -1;
            overflow: hidden;
        }

        .particle {
            position: absolute;
            background: rgba(255, 255, 255, 0.5);
            border-radius: 50%;
            animation: particleFloat 15s infinite linear;
        }

        @keyframes particleFloat {
            0% {
                transform: translateY(100vh) rotate(0deg);
                opacity: 0;
            }
            10% {
                opacity: 1;
            }
            90% {
                opacity: 1;
            }
            100% {
                transform: translateY(-100px) rotate(360deg);
                opacity: 0;
            }
        }

        /* Loading Animation */
        .loading-bar {
            position: fixed;
            top: 0;
            left: 0;
            width: 0%;
            height: 3px;
            background: var(--gradient);
            z-index: 1000;
            transition: width 0.3s ease;
        }

        /* Footer Styles */
        footer {
            text-align: center;
            padding: 2rem;
            margin-top: 3rem;
            border-top: 1px solid rgba(255, 255, 255, 0.1);
            color: rgba(255, 255, 255, 0.6);
            font-size: 0.9rem;
        }
    </style>
</head>
<body>
    <!-- Loading Bar -->
    <div class="loading-bar" id="loadingBar"></div>

    <!-- Animated Background -->
    <div class="bg-animation">
        <div class="bg-circle"></div>
        <div class="bg-circle"></div>
        <div class="bg-circle"></div>
        <div class="bg-circle"></div>
    </div>

    <!-- Particles -->
    <div class="particles" id="particles"></div>

    <nav class="menu-bar">
        <div class="logo">GameZone</div>
        <div class="menu-items">
            <a href="/" class="menu-item"><i class="fas fa-home"></i> Home</a>
            <!-- Dashboard link removed -->
            <a href="/account" class="menu-item active"><i class="fas fa-user-cog"></i> Account</a>
            <a href="/game" class="menu-item"><i class="fas fa-gamepad"></i> Start Game</a>
            <a href="/auth/logout" class="menu-item logout"><i class="fas fa-sign-out-alt"></i> Logout</a>
        </div>
    </nav>
    
    <div class="container">
        <h1>Account Settings</h1>
        <div class="account-content">
            <div class="user-info">
                <h2>Profile Information</h2>
                <p><strong><i class="fas fa-user"></i> Username:</strong> <%= user.username %></p>
                <p><strong><i class="fas fa-envelope"></i> Email:</strong> <%= user.email %></p>
                
                <h3><i class="fas fa-history"></i> Game History</h3>
                <% if (user.scores && user.scores.length > 0) { %>
                    <div class="scores-list">
                        <% user.scores.sort((a,b) => b.createdAt - a.createdAt).forEach(function(score) { %>
                            <div class="score-item">
                                <p>
                                    <strong><i class="fas fa-star"></i> Score:</strong> <%= score.score %> |
                                    <strong><i class="fas fa-check-circle"></i> Correct:</strong> <%= score.correct %>/<%= score.total %> |
                                    <strong><i class="fas fa-clock"></i> Time:</strong> <%= Math.floor(score.timeSpentSeconds/60) %>m <%= score.timeSpentSeconds%60 %>s |
                                    <small><i class="fas fa-calendar"></i> <%= new Date(score.createdAt).toLocaleString() %></small>
                                </p>
                            </div>
                        <% }); %>
                    </div>
                <% } else { %>
                    <p>No games played yet. <a href="/game" style="color: var(--accent);">Start your first game!</a></p>
                <% } %>
                <% if (user.highScore) { %>
                    <p class="high-score"><strong><i class="fas fa-trophy"></i> High Score:</strong> <%= user.highScore %></p>
                <% } %>
            </div>
            
            <div class="stats-card">
                <h2><i class="fas fa-chart-line"></i> Game Statistics</h2>
                <% if (user.scores && user.scores.length > 0) { 
                    const totalGames = user.scores.length;
                    const totalCorrect = user.scores.reduce((sum, score) => sum + score.correct, 0);
                    const totalQuestions = user.scores.reduce((sum, score) => sum + score.total, 0);
                    const avgScore = user.scores.reduce((sum, score) => sum + score.score, 0) / totalGames;
                    const accuracy = totalQuestions > 0 ? (totalCorrect / totalQuestions * 100).toFixed(1) : 0;
                %>
                    <div class="stats-grid">
                        <div class="stat-item">
                            <div class="stat-value"><%= totalGames %></div>
                            <div class="stat-label">Games Played</div>
                        </div>
                        <div class="stat-item">
                            <div class="stat-value"><%= accuracy %>%</div>
                            <div class="stat-label">Accuracy</div>
                        </div>
                        <div class="stat-item">
                            <div class="stat-value"><%= Math.round(avgScore) %></div>
                            <div class="stat-label">Avg. Score</div>
                        </div>
                        <div class="stat-item">
                            <div class="stat-value"><%= user.highScore || 0 %></div>
                            <div class="stat-label">High Score</div>
                        </div>
                    </div>
                <% } else { %>
                    <p>Play some games to see your statistics!</p>
                <% } %>
                
                <div class="achievements">
                    <h3><i class="fas fa-medal"></i> Achievements</h3>
                    <div class="achievement-list">
                        <div class="achievement-item">
                            <div class="achievement-icon">
                                <i class="fas fa-gamepad"></i>
                            </div>
                            <div class="achievement-info">
                                <h4>First Game</h4>
                                <p>Complete your first game</p>
                            </div>
                        </div>
                        <div class="achievement-item">
                            <div class="achievement-icon">
                                <i class="fas fa-trophy"></i>
                            </div>
                            <div class="achievement-info">
                                <h4>High Scorer</h4>
                                <p>Reach a high score of 1000</p>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
    
    <footer>
        <p>&copy; 2023 GameZone. All rights reserved.</p>
    </footer>

    <script>
        // Loading animation
        window.addEventListener('load', function() {
            const loadingBar = document.getElementById('loadingBar');
            loadingBar.style.width = '100%';
            setTimeout(() => {
                loadingBar.style.opacity = '0';
                setTimeout(() => {
                    loadingBar.style.display = 'none';
                }, 300);
            }, 500);
        });

        // Create particles
        function createParticles() {
            const particlesContainer = document.getElementById('particles');
            const particleCount = 30;
            
            for (let i = 0; i < particleCount; i++) {
                const particle = document.createElement('div');
                particle.classList.add('particle');
                
                // Random properties
                const size = Math.random() * 5 + 2;
                const posX = Math.random() * 100;
                const delay = Math.random() * 15;
                const duration = Math.random() * 10 + 10;
                
                particle.style.width = `${size}px`;
                particle.style.height = `${size}px`;
                particle.style.left = `${posX}%`;
                particle.style.animationDelay = `${delay}s`;
                particle.style.animationDuration = `${duration}s`;
                
                particlesContainer.appendChild(particle);
            }
        }

        // Initialize particles
        createParticles();

        // Add hover effect to menu items
        document.querySelectorAll('.menu-item').forEach(item => {
            item.addEventListener('mouseenter', function() {
                this.style.transform = 'translateY(-3px)';
            });
            
            item.addEventListener('mouseleave', function() {
                this.style.transform = 'translateY(0)';
            });
        });

        // Animate score items on page load
        document.addEventListener('DOMContentLoaded', function() {
            const scoreItems = document.querySelectorAll('.score-item');
            scoreItems.forEach((item, index) => {
                item.style.animationDelay = `${index * 0.1}s`;
            });
        });
    </script>
</body>
</html>